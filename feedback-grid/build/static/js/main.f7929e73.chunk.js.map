{"version":3,"sources":["shared/components/Header/Header.js","shared/components/ErrorSnack/ErrorSnack.js","shared/components/LoadingSplash/LoadingSplash.js","App.js","reportWebVitals.js","index.js"],"names":["Header","gid","useParams","className","ErrorSnack","error","ReactDOM","createPortal","document","getElementById","LoadingSplash","src","alt","CreateGridPage","React","lazy","GridView","App","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"4HAAA,6BAgBeA,IAZA,WAAO,IACVC,EAAQC,cAARD,IAER,OACI,mCACI,oBAAIE,UAAU,OAAd,2BACA,sBAAKA,UAAU,OAAf,mBAA4B,+BAAOF,Y,gJCKhCG,EAXI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OAAOC,IAASC,aACZ,qBAAKJ,UAAS,sBAAiBE,EAAQ,OAAS,IAAhD,SACI,qBAAKF,UAAU,uBAAf,SACKE,MAIbG,SAASC,eAAe,gBCMbC,G,MAdO,WAClB,OACI,qBAAKP,UAAU,iBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,qBAAQQ,IAAG,UANe,iBAMf,YACHC,IAAI,GACJT,UAAU,yBAClB,0CACA,8C,gKCTVU,EAAiBC,IAAMC,MAAK,kBAAM,gCAClCC,EAAWF,IAAMC,MAAK,kBAAM,sDAanBE,EAXH,WACV,OAAO,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACL,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACR,EAAD,MAC/B,cAAC,IAAD,CAAOO,KAAK,iBAAiBC,QAAS,cAACL,EAAD,cCC/BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdjB,IAASyB,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.f7929e73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.css';\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Header = () => {\r\n    const { gid } = useParams();\r\n\r\n    return (\r\n        <header>\r\n            <h1 className=\"logo\">FEEDBACK GRID</h1>\r\n            <div className=\"room\">Room  <span>{gid}</span></div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './ErrorSnack.css'\r\n\r\nconst ErrorSnack = ({ error }) => {\r\n    return ReactDOM.createPortal(    \r\n        <div className={`error-snack ${error ? 'show' : ''}`}>\r\n            <div className=\"error-snack__message\">\r\n                {error}\r\n            </div>\r\n\r\n        </div>,\r\n    document.getElementById('error-hook'))\r\n}\r\n\r\nexport default ErrorSnack;","import React from 'react';\r\nimport './LoadingSplash.css'\r\nconst iconPath = process.env.PUBLIC_URL + '/assets/icons/';\r\n\r\nconst LoadingSplash = () => {\r\n    return (\r\n        <div className=\"loading-splash\">\r\n            <div className=\"loading-splash__spinner\">\r\n                <img    src={`${iconPath}grid.png`} \r\n                        alt=\"\" \r\n                        className=\"loading-splash__icon\"/>\r\n                <h2>FEEDBACK</h2>\r\n                <h3>GRID</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSplash;","import React,{Suspense} from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { LoadingSplash } from \"./shared/components\";\r\nconst CreateGridPage = React.lazy(() => import(\"./pages/CreateGridPage/CreateGridPage\"));\r\nconst GridView = React.lazy(() => import(\"./pages/GridView/GridView\"));\r\n\r\nconst App = () => {\r\n  return <Suspense fallback={<LoadingSplash/>}>\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<CreateGridPage/>} />\r\n        <Route path=\"/gridview/:gid\" element={<GridView/>} />\r\n      </Routes>\r\n    </Router>\r\n  </Suspense>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}